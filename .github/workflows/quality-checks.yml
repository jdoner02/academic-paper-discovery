name: Code Quality Checks

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  quality-checks:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, 3.10, 3.11]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev,nlp]"

    - name: Download NLTK data
      run: |
        python -c "import nltk; nltk.download('stopwords', quiet=True)"

    - name: Code formatting check (Black)
      run: black --check --diff src/ tests/

    - name: Import sorting check (isort)
      run: isort --check-only --diff src/ tests/

    - name: Linting (flake8)
      run: flake8 src/ tests/

    - name: Type checking (mypy)
      run: mypy src/
      continue-on-error: true  # Type checking is aspirational

    - name: Security scanning (bandit)
      run: bandit -r src/ -f json
      continue-on-error: true  # Security issues are warnings

    - name: Architecture validation
      run: python scripts/validate_architecture.py

    - name: Import validation
      run: python scripts/validate_imports.py

    - name: Run tests
      run: pytest tests/ --cov=src --cov-report=xml --cov-fail-under=85

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
