{
  "id": "EPIC-1",
  "type": "epic",
  "title": "Repository Quality & GitHub Management System",
  "description": "Establish comprehensive repository management practices including GitHub limits handling, quality standards, and best practices for academic research projects. This epic focuses on creating a gold-standard repository that serves as an educational example for students at all levels.",
  "priority": "critical",
  "effort": {
    "hours": 120,
    "story_points": 21,
    "complexity": "epic"
  },
  "skills": {
    "primary_role": "devops_engineer",
    "required_skills": [
      "Git/GitHub expertise",
      "Repository management",
      "CI/CD pipelines", 
      "Documentation standards",
      "Quality assurance"
    ],
    "skill_level": "proficient",
    "secondary_roles": ["technical_writer", "system_architect"]
  },
  "learning_objectives": {
    "cognitive_level": "create",
    "objectives": [
      "Design and implement comprehensive repository management strategy",
      "Establish quality standards for academic software projects",
      "Create automated workflows for repository health monitoring",
      "Develop documentation standards for educational repositories"
    ],
    "prerequisites": [
      "Basic Git knowledge",
      "Understanding of software development lifecycle",
      "Familiarity with GitHub features"
    ],
    "wiki_references": [
      "wiki/repository-management/overview",
      "wiki/github-limits/technical-constraints",
      "wiki/quality-standards/academic-projects"
    ]
  },
  "acceptance_criteria": [
    {
      "criterion": "Repository size remains under GitHub limits with LFS strategy",
      "testable": true,
      "test_method": "Automated size monitoring with git-sizer"
    },
    {
      "criterion": "Comprehensive .gitignore and .gitattributes configuration",
      "testable": true,
      "test_method": "File pattern validation and LFS tracking verification"
    },
    {
      "criterion": "Quality standards documented and enforced",
      "testable": true,
      "test_method": "Lint checks and quality gate automation"
    },
    {
      "criterion": "Educational value maximized for all skill levels",
      "testable": false,
      "test_method": "Peer review and educational expert evaluation"
    }
  ],
  "definition_of_done": [
    "All repository limits properly managed with Git LFS",
    "Comprehensive copilot instructions updated with technical constraints",
    "Automated quality checks implemented in CI/CD",
    "Documentation covers all repository management practices",
    "Educational examples provided for each concept",
    "Wiki pages created for all technical constraints",
    "Repository health monitoring dashboard functional"
  ],
  "dependencies": {
    "blocks": ["EPIC-2", "EPIC-3", "EPIC-4", "EPIC-5"],
    "blocked_by": [],
    "related": []
  },
  "assessment": {
    "unit_test_question": {
      "question": "Your academic research repository has grown to 2.5 GB and pushes are failing. What is the most appropriate solution?",
      "type": "multiple_choice",
      "options": [
        "Delete old files to reduce repository size",
        "Use Git LFS for large files like PDFs and datasets",
        "Split the repository into multiple smaller repositories", 
        "Compress all files before committing"
      ],
      "correct_answer": "Use Git LFS for large files like PDFs and datasets",
      "explanation": "Git LFS is specifically designed for managing large files in Git repositories. It stores large files separately while maintaining version control, keeping the main repository small and efficient."
    },
    "competency_indicators": [
      {
        "level": "novice",
        "description": "Can follow step-by-step instructions to set up Git LFS for PDF files"
      },
      {
        "level": "basic", 
        "description": "Understands when to use Git LFS and can configure .gitattributes"
      },
      {
        "level": "developing",
        "description": "Can design LFS strategy for complex academic projects with multiple file types"
      },
      {
        "level": "proficient",
        "description": "Can establish comprehensive repository management practices including monitoring"
      },
      {
        "level": "advanced",
        "description": "Can create automated systems for repository health and quality management"
      },
      {
        "level": "mastered",
        "description": "Can design enterprise-level repository management strategies and mentor others"
      }
    ]
  },
  "agile_metadata": {
    "sprint_ready": false,
    "epic_id": "EPIC-1",
    "labels": ["repository-management", "github", "quality", "education"],
    "team_assignment": "infrastructure"
  },
  "educational_metadata": {
    "target_audience": ["undergraduate", "graduate", "bootcamp", "junior_developer"],
    "concepts_taught": [
      "Git repository management",
      "GitHub technical limitations",
      "Git LFS usage patterns",
      "Quality assurance automation",
      "Documentation standards"
    ],
    "industry_relevance": "Repository management is critical in all software engineering roles. Understanding Git LFS and quality standards is essential for working with large codebases and academic research projects.",
    "common_pitfalls": [
      "Ignoring repository size until it becomes a problem",
      "Not using Git LFS for appropriate file types",
      "Insufficient documentation of repository standards",
      "Lack of automated quality checks"
    ],
    "extension_activities": [
      "Implement custom Git hooks for quality enforcement",
      "Create repository analytics dashboard",
      "Design multi-repository coordination strategies",
      "Establish organization-wide repository standards"
    ]
  },
  "mentoring": {
    "mentor_notes": "This epic requires understanding both technical Git concepts and educational design principles. Students may struggle with the abstract nature of quality standards - use concrete examples from real repositories.",
    "check_in_questions": [
      "Can you explain why we use Git LFS instead of storing large files directly?",
      "What quality standards matter most for educational repositories?",
      "How would you explain repository limits to a non-technical researcher?"
    ],
    "success_indicators": [
      "Student can articulate the trade-offs between different repository management approaches",
      "Student proactively identifies potential repository health issues",
      "Student creates clear documentation that helps others"
    ],
    "intervention_triggers": [
      "Student is confused about when to use Git LFS",
      "Student focuses only on technical implementation without considering educational value",
      "Student struggles to communicate technical concepts clearly"
    ]
  },
  "created_date": "2025-08-07T00:00:00Z",
  "updated_date": "2025-08-07T00:00:00Z",
  "version": "1.0.0"
}
